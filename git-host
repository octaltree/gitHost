#!/usr/bin/python3
# written in Python 3.4.3

from enum import Enum
import sys
import traceback
import argparse
import urllib.parse
import urllib.request
import urllib.error
import json
import re
#import logging

USERAGENT = 'gitHost/0.0.1.0' # 何かしら指定しないとhubで怒られる

# main :: IO Int
def main():
    rootp = argparse.ArgumentParser(description='manage git remote host')
    subp = rootp.add_subparsers(description='')
    repop = subp.add_parser('repo', help='manipulate remote repo')
    addp = subp.add_parser('add', help='add hosting service provider & user')
    args = rootp.parse_args()
    #print(args)
    #response = getOwnBucketRepos("signagemapapp", "mSUvKh02fgOBgdbQauSsTbirtX3ANBqg4fTUmgig6EyG6o1opWeEay0-zkRoSlLrG6CGBFyx35RxT_bV7g==")
    #response = getOwnBucketRepos("octaltree", "dummy")
    #print(response.read())
    #print(response.getheaders())
    #print(response.status, response.reason)
    return undefined

# :: urllib.request.Request -> IO urllib.request.HTTPResponse
def http(request):
    request.add_header("User-Agent", USERAGENT)
    try:
        return urllib.request.urlopen(request)
    except urllib.error.HTTPError as e:
        exctype, excval, exctraceback = sys.exc_info()
        print(e.status, e.reason, file=sys.stderr)
        print(e.getheaders(), file=sys.stderr)
        print(e.read(), file=sys.stderr)
        print("full_url: ", request.full_url, file=sys.stderr)
        print("data: ", request.data, file=sys.stderr)
        print("headers: ", request.header_items(), file=sys.stderr)
        exit(1)

# :: Str -> Str -> IO urllib.request.HTTPResponse
def getOwnBucketRepos(user, token):
    url = "https://api.bitbucket.org/2.0/repositories/%s" % urllib.parse.quote(user)
    headers = { "Authorization": "Bearer %s" % token}
    return http(urllib.request.Request(url, headers=headers))

# :: Str -> Str -> IO urllib.request.HTTPResponse
def getOwnHubRepos(user, token):
    url = "https://api.github.com/user/repos"
    headers = { "Authorization": "token %s" % token}
    return http(urllib.request.Request(url, headers=headers))

# :: Str -> Str -> IO urllib.request.HTTPResponse
def getOwnLabRepos(user, token):
    url = "https://gitlab.com/api/v3/projects"
    headers = { "PRIVATE-TOKEN": "%s" % token}
    return http(urllib.request.Request(url, headers=headers))

# :: urllib.request.HTTPResponse -> Str
def httpBody(response):
    contenttype = response.getheader('Content-Type', default='charset=utf-8')
    charset = charsetFromContentType(contenttype)
    if charset is None :
        charset = 'utf-8'
    return response.read().decode(charset)

# :: Str -> Str
def charsetFromContentType(str):
    lines = str.split(';')
    charsets = list(filter(lambda s: 'charset' in s, lines))
    if len(charsets) == 0 :
        return None
    charset = charsets.pop().replace(' ', '')
    mat = re.match('^charset=(.*)[;]*$', charset)
    return mat.group(1) if mat else None

def newOwnBucketRepo():
    return undefined

def newOwnHubRepo():
    return undefined

def newOwnLabRepo():
    return undefined

# undefined :: a
undefined = None

if __name__ == "__main__" :
  exit(main())

# vim:fenc=utf-8 ff=unix ft=python ts=4 sw=4 sts=4 si et fdm=indent fdl=0 fdn=1:
# vim:cinw=if,elif,else,for,while,try,except,finally,def,class:
